= form_for @resource, url: @resource, html: { class: "form form-horizontal resource" } do |f|
  - if @resource.errors.any?
    #error_explanation
      h2 = "#{pluralize(@resource.errors.count, "error")} prohibited this wall from being saved:"
      ul
        - @resource.errors.full_messages.each do |message|
          li = message
  .form-group
    = f.hidden_field :wall_id, value: @resource.wall_id
  .form-group
    = f.label 'resource id', :class => 'control-label col-lg-2'
    .col-lg-10
      = f.text_field :resource_id, :class => 'form-control'
    = f.error_span(:resource_id)
  .form-group
    = f.label :resource_type, :class => 'control-label col-lg-2'
    .col-lg-10
      = f.select :resource_type, Resource.resource_types.keys.to_a, {}, class: 'form-control'
    = f.error_span(:resource_type)

  .form-group
    = f.label :engagement, :class => 'control-label col-lg-2'
    .col-lg-10
      = f.number_field :engagement, :class => 'form-control'
    = f.error_span(:engagement)
  .form-group
    = f.label :options, :class => 'control-label col-lg-2'
    .col-lg-10
      = f.hidden_field :options, :class => 'form-control'
    = f.error_span(:options)

  div.row#stream_options
    span#period_label.control-label.col.col-lg-3 period
    '
    = select_tag 'period',  options_for_select(['', 'daily', 'weekly', 'monthly'])
    br
    br
    span#mix_type_label.control-label.col.col-lg-3 mix_type
    '
    = select_tag 'mix_type',  options_for_select(['hot', 'popular', 'featured'])
  div.row#custom_options_new
    br
    br
    span.control-label.col.col-lg-3 key
    '
    = text_field_tag 'key', '', id: 'option_key'
    '
    span value
    '
    = text_field_tag 'value', '', id: 'option_value'
    '
    button#option_add.btn.btn-default.octicon.octicon-plus
  div.row#custom_options
  br
  .form-group
    .col-lg-offset-2.col-lg-10
      = f.submit nil, :class => 'btn btn-primary'
      '
      = link_to t('.cancel', :default => t("helpers.links.cancel")), edit_wall_path(@wall), :class => 'btn'

javascript:
  var resourceType  = document.getElementById("resource_resource_type");
  var options       = document.getElementById("resource_options");
  var streamOptions = document.getElementById("stream_options");
  var optionAdd     = document.getElementById("option_add");

  var period       = document.getElementById("period");
  var mixType      = document.getElementById("mix_type");

  var periodLabel  = document.getElementById("period_label");
  var mixTypeLabel = document.getElementById("mix_type_label");

  var optionsValue = '{}';
  if (options && options.value.length > 0) {
    optionsValue = options.value
  }
  var values = JSON.parse(optionsValue);

  function updateTextFields() {
    switch (resourceType.value) {
      case 'stream':
      case 'track_stream':
      case 'album_stream':
      case 'playlist_stream':
        streamOptions.style.display = '';
        period.style.display        = '';
        periodLabel.style.display   = '';
        mixType.style.display       = 'none';
        mixTypeLabel.style.display  = 'none';
        if (period.value) {
          values.period = period.value;
        }
        delete values['type']
        break;
      case 'mix':
      case 'track_mix':
      case 'album_mix':
      case 'playlist_mix':
        streamOptions.style.display = '';
        period.style.display        = '';
        periodLabel.style.display   = '';
        mixType.style.display       = '';
        mixTypeLabel.style.display  = '';
        if (period.value) {
          values.period = period.value;
        }
        values.type = mixType.value;
        break;
      default:
        streamOptions.style.display = 'none';
        delete values['period']
        delete values['type']
        break;
    }
    options.value = JSON.stringify(values);
  }
  function updateOptionsValue() {
    options.value = JSON.stringify(values);
  }
  function addOption(key, value) {
    if (key === '') {
      return;
    }
    values[key] = value;
    updateOptionsValue();
    var $pair = $('<div />')
      .attr('data-key', key)
      .attr('data-value', value)
      .append(
        '<span class="resource-option-key control-label col col-lg-3">' +
          key +
        '</span>' +
        '<span class="resource-option-value control-label">' + value + '</span>' + ' ' +
        '<button class="resource-option-button btn btn-default octicon octicon-dash" />'
      );
    $("#custom_options").append($pair);
  }
  resourceType.addEventListener('change', updateTextFields);
  period.addEventListener(      'change', updateTextFields);
  mixType.addEventListener(     'change', updateTextFields);
  optionAdd.addEventListener(    'click',   function(e) {
    e.preventDefault();
    var $key = $('#option_key');
    var $value = $('#option_value');
    addOption($key.val(), $value.val());
  });
  $('#custom_options').on('click', '.resource-option-button', function(e) {
    e.preventDefault();
    var $pair = $(e.target).parent();
    var key = $pair.attr('data-key');
    delete values[key];
    $pair.remove();
    updateOptionsValue();
  });

  try {
    var v = JSON.parse(options.value)
    Object.keys(v).forEach(function(key) {
      if (key === 'period') {
        period.value  = v[key];
      } else if (key === 'type') {
        mixType.value = v[key];
      } else {
        addOption(key, v[key]);
      }
    });
  } finally {
    updateTextFields();
  }
